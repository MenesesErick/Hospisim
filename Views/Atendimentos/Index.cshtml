@model IEnumerable<Hospisim.Models.Atendimento>

@{
    ViewData["Title"] = "Histórico de Atendimentos";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Registrar Novo Atendimento</a>
</p>

<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <input type="text" name="SearchString" class="form-control" placeholder="Buscar por Nome ou CPF do Paciente..." value="@ViewData["CurrentFilter"]" />
        <button class="btn btn-outline-primary" type="submit"><i class="fa-solid fa-magnifying-glass"></i> Buscar</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Limpar</a>
    </div>
</form>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Data e Hora</th>
            <th>Paciente</th>
            <th>Profissional</th>
            <th>Tipo</th>
            <th>Status</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="@(item.Status == "Realizado" ? "table-success" : item.Status == "Cancelado" ? "table-danger" : "")">
                <td>@item.DataHora.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@Html.DisplayFor(modelItem => item.Paciente.NomeCompleto)</td>
                <td>@Html.DisplayFor(modelItem => item.Profissional.NomeCompleto)</td>
                <td>@Html.DisplayFor(modelItem => item.Tipo)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm" title="Editar">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm" title="Detalhes">
                        <i class="fa-solid fa-circle-info"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>